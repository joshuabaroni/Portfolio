{"version":3,"sources":["menu/Menu.module.css","img/JoshBaroniResume2020-1.jpg","img/ProfilePicBaroni2016.jpg","menu/Menu.js","pages/BasicPage.js","entry_point/EntryPoint.js","App.js","serviceWorker.js","index.js","entry_point/EntryPoint.module.css"],"names":["module","exports","RenderNavs","props","navLinkComponents","sections","map","section","index","push","Nav","Link","key","className","classes","NavLink","href","Menu","Navbar","navbar","bg","expand","Brand","BasicPage","classTitle","src","img","style","width","console","log","body","children","webpage","name","title","subpages","id","BorderedDiv","ignore","Ignore","sixtyPercent","Headshot","Resume","Bottom","LinkButton","EntryPoint","Home","page","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.3b1fac3f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavLink\":\"Menu_NavLink__9JLxN\",\"navbar\":\"Menu_navbar__2k2K1\",\"navbar-brand\":\"Menu_navbar-brand__3SODX\",\"navbar-toggle\":\"Menu_navbar-toggle__1v0eG\"};","module.exports = __webpack_public_path__ + \"static/media/JoshBaroniResume2020-1.ff228373.jpg\";","module.exports = __webpack_public_path__ + \"static/media/ProfilePicBaroni2016.5bae192a.jpg\";","import React from 'react'\r\nimport { Navbar, Nav } from 'react-bootstrap'\r\nimport classes from './Menu.module.css'\r\n\r\nconst RenderNavs = (props) => {\r\n    let navLinkComponents = [];\r\n    props.sections.map((section, index) => {\r\n        return navLinkComponents.push(\r\n            <Nav.Link key={index} className={classes.NavLink} href={`#${section}`}>{section}</Nav.Link>\r\n        )\r\n    })\r\n    return (\r\n        <Nav className=\"Menu\">\r\n            {navLinkComponents}\r\n        </Nav>\r\n    )\r\n}\r\n\r\nconst Menu = (props) => {\r\n    return (\r\n        <div>\r\n            <Navbar className={classes.navbar} bg=\"light\" expand=\"lg\">\r\n                <Navbar.Brand href=\"#root\">{/*TODO logo img here*/}</Navbar.Brand>\r\n                <RenderNavs sections={props.sections}/>\r\n            </Navbar>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Menu;","import React from 'react'\r\n\r\n/**\r\n * Template for pages containing only text, auch as about me\r\n * @param {*contains pagename} props \r\n */\r\nconst BasicPage = ( props ) => {\r\n    return (\r\n        <div className={props.className}>\r\n            <h2>\r\n                {props.classTitle}\r\n            </h2>\r\n            <img src={props.img} style={{width: \"60%\"}}/>\r\n            <p>\r\n                {console.log(props.body)}\r\n                {props.body}\r\n            </p>\r\n            {props.children}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default BasicPage;","import React, {Component} from 'react';\r\nimport classes from './EntryPoint.module.css';\r\nimport {BrowserRouter as Router} from 'react-router-dom';\r\nimport Menu from '../menu/Menu.js'\r\nimport BasicPage from '../pages/BasicPage.js'\r\nimport Headshot from '../img/ProfilePicBaroni2016.jpg'\r\nimport Resume from \"../img/JoshBaroniResume2020-1.jpg\"\r\n\r\nconst webpage = {\r\n    name: \"Joshua Baroni\",\r\n    title: \"FullStack Developer\",\r\n    sections: [\r\n        \"Home\",\r\n        \"About Me\",\r\n        \"My Resume\",\r\n        \"Projects\",\r\n        \"Contact Me\"\r\n    ],\r\n    subpages: [\r\n        () => {\r\n            return (\r\n                <div key={1} id={webpage.sections[1]} className={classes.BorderedDiv}>\r\n                <BasicPage ignore={classes.Ignore/* todo needs formatting */}\r\n                    className={classes.sixtyPercent}\r\n                    classTitle={webpage.sections[1]}\r\n                    img={Headshot}\r\n                    body={`Hi, my name is Josh Baroni and welcome to my website!\r\n                    Graduating from CNU's Class of 2020 with a B.S. in Computer Science,\r\n                    I am currently new to the industry and am finding what specific type\r\n                    of data architecture and design I am most interested in pursuing. In the\r\n                    meantime, feel free to check out some of the projects I've worked on over\r\n                    the years.`}\r\n                />\r\n            </div>)\r\n        },\r\n        () => {\r\n            return (<div key={2} id={webpage.sections[2]} className={classes.BorderedDiv}>\r\n                <BasicPage\r\n                    classTitle={`${webpage.sections[2]}: Updated 2020`}\r\n                    img={Resume /* TODO type out instead of screenshot */}\r\n                >\r\n                    <LinkButton name='JoshBaroniResume2020.PDF' href='https://docs.google.com/document/d/1XPGBCnOPeDbmYbU79OaEwSEDOC9kUKM1WLgZkvsJT4g/edit?usp=sharing'/>\r\n                </BasicPage>\r\n            </div>)\r\n        },\r\n        /* TODO link project pages */\r\n        () => {\r\n            return (\r\n            <div key={3} id={webpage.sections[4]} className={classes.BorderedDiv}>\r\n                <BasicPage\r\n                    className={classes.Bottom}\r\n                    classTitle={`${webpage.sections[4]}`}\r\n                    body=\"Email: joshua.baroni.16@cnu.edu\r\n                    Cell: (571)-389-2922 (Text me unless it's urgent!)\r\n                    Discord: HesAMusicMan#2934\r\n                    Contact Hours: 9a-5p EST Mon-Sat\"\r\n                />\r\n            </div>\r\n            )\r\n        }\r\n    ]\r\n}\r\n\r\nconst LinkButton = (props) => {\r\n    console.log(props.href)\r\n    return (\r\n    <Router>\r\n      <a href={props.href}>\r\n        <button className={classes.LinkButton}>\r\n            <strong>{props.name}</strong>\r\n        </button>\r\n      </a>\r\n    </Router>\r\n    )\r\n}\r\n\r\n(() => console.log(Resume))();\r\n\r\nclass EntryPoint extends Component {\r\n    render() {\r\n        return (\r\n        <div key={0} id={webpage.sections[0]} className={classes.Home}>\r\n            <Menu sections={webpage.sections}/>\r\n            <h1>{webpage.name}: {webpage.title}</h1>\r\n            <LinkButton name={\"Github\"} href=\"https://github.com/joshuabaroni\" />\r\n            <LinkButton name={\"LinkedIn\"} href=\"https://www.linkedin.com/in/joshua-baroni-b50580177/\" />\r\n            <LinkButton name={\"Facebook\"} href=\"https://www.facebook.com/profile.php?id=100020207475034\" />\r\n            {webpage.subpages.map(page => {\r\n                return page();\r\n            })}\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EntryPoint;","import React from 'react';\r\nimport './App.css';\r\nimport EntryPoint from './entry_point/EntryPoint.js'\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <EntryPoint />      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Home\":\"EntryPoint_Home__2XQwI\",\"AboutMe\":\"EntryPoint_AboutMe__3dg8Q\",\"BorderedDiv\":\"EntryPoint_BorderedDiv__2hydP\",\"Bottom\":\"EntryPoint_Bottom__2Dcu2\",\"LinkButton\":\"EntryPoint_LinkButton__3ufBN\",\"sixtyPercent\":\"EntryPoint_sixtyPercent__WKGmz\"};"],"sourceRoot":""}