{"version":3,"sources":["menu/Menu.module.css","img/JoshBaroniResume2020-1.jpg","img/ProfilePicBaroni2016.jpg","entry_point/EntryPoint.module.css","menu/Menu.js","pages/BasicPage.js","pages/NaiveBayesInterface.js","pages/ProjectsPage.js","entry_point/EntryPoint.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","RenderNavs","props","navLinkComponents","sections","map","section","index","push","Nav","Link","key","className","classes","NavLink","href","Menu","Navbar","navbar","bg","expand","Brand","BasicPage","classTitle","src","img","style","width","console","log","body","children","prodURL","XMLHttpRequest","ApiURL","list_files","get_model_ranges","get_model_frequencies","get_model_accuracy","set_file","fileKey","ModelVisual","id","data","margin","height","svg","d3","append","attr","subgroups","forEach","obj","range","groups","d","category","x","domain","padding","call","tickSize","y","xSubgroup","bandwidth","color","selectAll","enter","count","frequency","out","value","length","undefined","dataPoints","getCall","url","a","options","method","headers","accept","fetch","response","text","status","JSON","stringify","parse","requestOptionsPOST","then","NaiveBayesInterface","handleChange","event","setState","input","target","callSetData","sendRequestHandler","state","callListOfFiles","output","callGetModel","getModelRanges","getModelFrequencies","Promise","all","toString","visual","callGetModelAccuracy","ref","React","createRef","onClick","this","type","onChange","Object","keys","Component","ProjectsPage","renderProjects","projects","show","showNaiveBayes","drawn","page","webpage","name","title","subpages","BorderedDiv","ignore","Ignore","sixtyPercent","Headshot","Resume","Bottom","LinkButton","EntryPoint","Home","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.81f9deaf.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavLink\":\"Menu_NavLink__9JLxN\",\"navbar\":\"Menu_navbar__2k2K1\",\"navbar-brand\":\"Menu_navbar-brand__3SODX\",\"navbar-toggle\":\"Menu_navbar-toggle__1v0eG\"};","module.exports = __webpack_public_path__ + \"static/media/JoshBaroniResume2020-1.ff228373.jpg\";","module.exports = __webpack_public_path__ + \"static/media/ProfilePicBaroni2016.5bae192a.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Home\":\"EntryPoint_Home__2XQwI\",\"AboutMe\":\"EntryPoint_AboutMe__3dg8Q\",\"BorderedDiv\":\"EntryPoint_BorderedDiv__2hydP\",\"Bottom\":\"EntryPoint_Bottom__2Dcu2\",\"LinkButton\":\"EntryPoint_LinkButton__3ufBN\",\"Project\":\"EntryPoint_Project__2_-gZ\",\"sixtyPercent\":\"EntryPoint_sixtyPercent__WKGmz\"};","import React from 'react'\r\nimport { Navbar, Nav } from 'react-bootstrap'\r\nimport classes from './Menu.module.css'\r\n\r\nconst RenderNavs = (props) => {\r\n    let navLinkComponents = [];\r\n    props.sections.map((section, index) => {\r\n        return navLinkComponents.push(\r\n            <Nav.Link key={index} className={classes.NavLink} href={`#${section}`}>{section}</Nav.Link>\r\n        )\r\n    })\r\n    return (\r\n        <Nav className=\"Menu\">\r\n            {navLinkComponents}\r\n        </Nav>\r\n    )\r\n}\r\n\r\nconst Menu = (props) => {\r\n    return (\r\n        <div>\r\n            <Navbar className={classes.navbar} bg=\"light\" expand=\"lg\">\r\n                <Navbar.Brand href=\"#root\">{/*TODO logo img here*/}</Navbar.Brand>\r\n                <RenderNavs sections={props.sections}/>\r\n            </Navbar>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Menu;","import React from 'react'\r\n\r\n/**\r\n * Template for pages containing only text, auch as about me\r\n * @param {*contains pagename} props \r\n */\r\nconst BasicPage = ( props ) => {\r\n    return (\r\n        <div className={props.className}>\r\n            <h2>\r\n                {props.classTitle}\r\n            </h2>\r\n            <img src={props.img} style={{width: \"60%\"}}/>\r\n            <p>\r\n                {console.log(props.body)}\r\n                {props.body}\r\n            </p>\r\n            {props.children}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default BasicPage;","import React, { Component } from 'react'\r\nimport * as d3 from 'd3'\r\n\r\nconst Http = new XMLHttpRequest();\r\nconst prodURL = \"https://naivebayesjava.herokuapp.com\";\r\nconst devURL = \"http://localhost:8080\";\r\n\r\n// change prodURL to prodURL before pushing to github\r\n// change HttpRequest to HttpsRequest\r\nconst ApiURL = {\r\n    // GET calls\r\n    list_files: prodURL + \"/list_available_files\",\r\n    get_model_ranges: prodURL + \"/get_model_ranges\",\r\n    get_model_frequencies: prodURL + \"/get_model_frequencies\",\r\n    get_model_accuracy: prodURL + \"/get_model_accuracy\",\r\n    // POST calls\r\n    set_file: (fileKey) => {\r\n        return prodURL + `/set_file?fileKey=${fileKey}`\r\n    }\r\n}\r\n\r\nconst ModelVisual = (props) => {\r\n    return (\r\n        <div id=\"my_dataviz\">\r\n            {((data) => {\r\n                var margin = {top: 10, right: 30, bottom: 20, left: 50},\r\n                width = 560 - margin.left - margin.right,\r\n                height = 500 - margin.top - margin.bottom;\r\n            \r\n                // append the svg object to the body of the page\r\n                var svg = d3.select(\"#my_dataviz\")\r\n                .append(\"svg\")\r\n                    .attr(\"width\", width + margin.left + margin.right)\r\n                    .attr(\"height\", height + margin.top + margin.bottom)\r\n                .append(\"g\")\r\n                    .attr(\"transform\",\r\n                        \"translate(\" + margin.left + \",\" + margin.top + \")\");\r\n                \r\n                // Parse the Data\r\n                \r\n                // List of subgroups = header of the csv files = soil condition here\r\n                var subgroups = []\r\n                data.forEach(obj => {if (obj.range!=null)subgroups.push(obj.range)})\r\n            \r\n                // List of groups = species here = value of the first column called group -> I show them on the X axis\r\n                var groups = data.map(function(d){return(d.category)})\r\n            \r\n                // Add X axis\r\n                var x = d3.scaleBand()\r\n                    .domain(groups)\r\n                    .range([0, width])\r\n                    .padding([0.2])\r\n                svg.append(\"g\")\r\n                    .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n                    .call(d3.axisBottom(x).tickSize(0));\r\n            \r\n                // Add Y axis\r\n                var y = d3.scaleLinear()\r\n                    .domain([0, 1.00])\r\n                    .range([ height, 0 ]);\r\n                    svg.append(\"g\")\r\n                    .call(d3.axisLeft(y));\r\n            \r\n                // Another scale for subgroup position?\r\n                var xSubgroup = d3.scaleBand()\r\n                    .domain(subgroups)\r\n                    .range([0, x.bandwidth()])\r\n                    .padding([0.05])\r\n            \r\n                // color palette = one color per subgroup\r\n                var color = d3.scaleOrdinal()\r\n                    .domain(subgroups)\r\n                    .range(['#e41a1c','#377eb8','#4daf4a'])\r\n            \r\n                var index = 0;\r\n\r\n                // Show the bars\r\n                svg.append(\"g\")\r\n                    .selectAll(\"g\")\r\n                    // Enter in data = loop group per group\r\n                    .data(data)\r\n                    .enter()\r\n                    .append(\"g\")\r\n                        .attr(\"transform\", function(d) {\r\n                            return \"translate(\" + x(d.category) + \",0)\";\r\n                        })\r\n                    .selectAll(\"rect\")\r\n                    .data(function(d) {\r\n                        let count = 0;\r\n                        return subgroups.map((key) => {\r\n                            if (d.frequency === null) {\r\n                                return -1;\r\n                            }\r\n                            let out = {key: key, value: d.frequency[count]};\r\n                            count += 1;\r\n                            return out;\r\n                        });\r\n                    })\r\n                    .enter().append(\"rect\")\r\n                        .attr(\"x\", function(d) {\r\n                            if (d === -1) {\r\n                                return 0;\r\n                            }\r\n                            let out = xSubgroup(d.key[index]);\r\n                            index === d.key.length - 1 ? index += 1 : index = 0\r\n                            return out;\r\n                        })\r\n                        .attr(\"y\", function(d) {\r\n                            if (d === -1 || d.value === undefined) {\r\n                                return 0;\r\n                            }\r\n                            let out = y(d.value[index]);\r\n                            index === d.value.length - 1 ? index += 1 : index = 0\r\n                            return out;\r\n                        })\r\n                        .attr(\"width\", xSubgroup.bandwidth())\r\n                        .attr(\"height\", function(d) {\r\n                            if (d === -1 || d.value === undefined) {\r\n                                return 0;\r\n                            }\r\n                            let out = height - y(d.value[index]);\r\n                            index === d.value.length - 1 ? index += 1 : index = 0\r\n                            return out;\r\n                        })\r\n                        .attr(\"fill\", function(d) { return color(d.key); });\r\n                })(props.dataPoints)\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n// GET Template\r\n// Simple GET request using fetch\r\nasync function getCall(url) {\r\n    let options = {\r\n        method: 'GET',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        accept: { 'Accept': 'application/json' }\r\n    };\r\n    let response = await fetch(url, options);\r\n    let data = await response.text();\r\n    console.log(`Response received from ${ApiURL.get_model_accuracy} with code ${response.status}`)\r\n    data = JSON.stringify(data);\r\n    data = JSON.parse(data);\r\n    return data;\r\n}\r\n\r\n// POST Template\r\n// Simple POST request with a JSON body using fetch\r\nasync function sendRequestHandler(fileKey) {\r\n    const requestOptionsPOST = {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' }\r\n        // body: JSON.stringify({ title: 'React POST Request Example' })\r\n    };\r\n    fetch(ApiURL.set_file(fileKey), requestOptionsPOST)\r\n        .then(response => {\r\n                console.log(`POST request sent to ${ApiURL.set_file(fileKey)} with code ${response.status}`)\r\n            } )\r\n}\r\n\r\nclass NaiveBayesInterface extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.ref = React.createRef();\r\n        this.state = {\r\n            input: \"\",\r\n            output: [],\r\n            visual: null\r\n        }\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({input: event.target.value});\r\n    }\r\n\r\n    callSetData = () => {\r\n        sendRequestHandler(this.state.input)\r\n    }\r\n\r\n    callListOfFiles = () => {\r\n        getCall(ApiURL.list_files).then(data => {\r\n            this.setState({ output: data })\r\n        });\r\n    }\r\n\r\n    // callCurrentModelName = () => {\r\n        \r\n    // }\r\n\r\n    callGetModel = () => {\r\n        let getModelRanges = getCall(ApiURL.get_model_ranges);\r\n        let getModelFrequencies = getCall(ApiURL.get_model_frequencies);\r\n        Promise.all([getModelRanges, getModelFrequencies]).then(data => {\r\n            this.setState({output: data})\r\n            const dataPoints = [];\r\n\r\n            for (let value in JSON.parse(data[0].toString())) {\r\n                dataPoints.push({\r\n                    category: value,\r\n                    range: JSON.parse(data[0].toString())[value],\r\n                    frequency: JSON.parse(data[1].toString())[value]\r\n                })\r\n            }\r\n\r\n            this.setState({ visual: <ModelVisual dataPoints={dataPoints}/> }) // returns JSX element \r\n        });\r\n    }\r\n\r\n    callGetModelAccuracy = () => {\r\n        getCall(ApiURL.get_model_accuracy).then(data => {\r\n            this.setState({ output: data });\r\n        });\r\n    }\r\n\r\n    // callGetTrainingDataFile = () => {\r\n\r\n    // }\r\n\r\n    render() {\r\n        return <div>\r\n            <h3>Welcome to Naive Bayes Java!</h3>\r\n            <p>The REST API for this project is hosted at</p>\r\n            <a style={{'display':'block', 'paddingBottom':'1.5em', 'color':'rgb(0, 150, 196)'}} href=\"https://naivebayesjava.herokuapp.com/swagger-ui.html#/\">https://naivebayesjava.herokuapp.com/</a>\r\n            <button style={{'display':'inline', 'background':'rgb(32, 32, 32)', 'color':'rgb(190, 190, 190)'}} onClick={this.callListOfFiles}>\r\n                Get List of Valid Files\r\n            </button>\r\n            {(this.state.visual === null)\r\n            ? (() => {return <button style={{'background':'rgb(32, 32, 32)', 'color':'rgb(190, 190, 190)'}} onClick={this.callGetModel}>\r\n                Get Model\r\n            </button>})()\r\n            : (() => {return <button style={{'background':'rgb(32, 32, 32)', 'color':'rgb(190, 190, 190)'}} onClick={this.callGetModel}>\r\n                Generate Visual\r\n            </button>})()}\r\n            <button style={{'background':'rgb(32, 32, 32)', 'color':'rgb(190, 190, 190)'}} onClick={this.callGetModelAccuracy}>\r\n                Get Model Accuracy\r\n            </button>\r\n            <div style={{'margin':'auto', 'display':'block'}}>\r\n                <input style={{'background':'rgb(32, 32, 32)', 'color':'rgb(190, 190, 190)'}} type='text' value={this.state.input} onChange={this.handleChange}/>\r\n                <button style={{'background':'rgb(32, 32, 32)', 'color':'rgb(190, 190, 190)'}} onClick={this.callSetData}>\r\n                    Set Training Data File\r\n                </button>\r\n            </div>\r\n            {/* <button onClick={this.callGetTrainingData}>\r\n                Get Training Data Arff Files\r\n            </button> */}\r\n            <div style={{'padding-top':'0.5em'}} ref={this.ref}></div>\r\n            <output type='textBox' style={{ 'padding':'1.25em', 'display':'block', 'Height': '30px', 'Width': '300px' }}>\r\n            { Object.keys(this.state.output).map(key => {\r\n                return this.state.output[key]                \r\n            }) }\r\n            </output>\r\n            { this.state.visual }\r\n        </div>\r\n    }\r\n}\r\n\r\nexport { ModelVisual }\r\nexport default NaiveBayesInterface;","import React, {Component} from 'react'\r\nimport * as d3 from 'd3'\r\nimport NaiveBayesInterface from \"../pages/NaiveBayesInterface\"\r\n\r\nclass ProjectsPage extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        this.ref = React.createRef();\r\n        this.state = {\r\n            drawn: false,\r\n            show: false\r\n        }\r\n    }\r\n\r\n    renderProjects = {\r\n        projects: [\r\n            () => {\r\n                return (\r\n                    <div>\r\n                        Project 1: Naive Bayes ML Algorithm in Java\r\n                        {(this.state.show) ? (\r\n                            <div style={{'padding-top':'0.5em'}}>\r\n                                <button\r\n                                    style={{ 'margin':'auto', 'display': 'block', 'background':'rgb(32, 32, 32)', 'color':'rgb(190, 190, 190)' }}\r\n                                    onClick={this.showNaiveBayes}>\r\n                                        Hide Naive Bayes Project Interface\r\n                                </button>\r\n                                <NaiveBayesInterface />\r\n                            </div>\r\n                            )\r\n                            :(\r\n                            <div style={{'padding-top':'0.5em'}}>\r\n                                <button\r\n                                    style={{ 'margin':'auto', 'display': 'block', 'background':'rgb(32, 32, 32)', 'color':'rgb(190, 190, 190)' }}\r\n                                    onClick={this.showNaiveBayes}>\r\n                                        Show Naive Bayes Project Interface\r\n                                </button>\r\n                            </div>\r\n                            )\r\n                        }\r\n                </div>\r\n                )\r\n            }\r\n        ]\r\n    }\r\n\r\n    showNaiveBayes = () => {\r\n        this.setState({show: !this.state.show})\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.renderProjects.projects.map(page => {\r\n                    return page();\r\n                })}\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nexport default ProjectsPage;","import React, {Component} from 'react';\r\nimport classes from './EntryPoint.module.css';\r\nimport {BrowserRouter as Router} from 'react-router-dom';\r\nimport Menu from '../menu/Menu.js'\r\nimport BasicPage from '../pages/BasicPage.js'\r\nimport Headshot from '../img/ProfilePicBaroni2016.jpg'\r\nimport Resume from \"../img/JoshBaroniResume2020-1.jpg\"\r\nimport ProjectsPage from '../pages/ProjectsPage'\r\nconst webpage = {\r\n    name: \"Joshua Baroni\",\r\n    title: \"FullStack Developer\",\r\n    sections: [\r\n        \"Home\",\r\n        \"About Me\",\r\n        \"My Resume\",\r\n        \"Projects\",\r\n        \"Contact Me\"\r\n    ],\r\n    subpages: [\r\n        () => {\r\n            return (\r\n                <div key={1} id={webpage.sections[1]} className={classes.BorderedDiv}>\r\n                <BasicPage ignore={classes.Ignore/* todo needs formatting */}\r\n                    className={classes.sixtyPercent}\r\n                    classTitle={webpage.sections[1]}\r\n                    img={Headshot}\r\n                    body={`Hi, my name is Josh Baroni and welcome to my website!\r\n                    Graduating from CNU's Class of 2020 with a B.S. in Computer Science,\r\n                    I am currently new to the industry and am finding what specific type\r\n                    of data architecture and design I am most interested in pursuing. In the\r\n                    meantime, feel free to check out some of the projects I've worked on over\r\n                    the years.`}\r\n                />\r\n            </div>)\r\n        },\r\n        () => {\r\n            return (<div key={2} id={webpage.sections[2]} className={classes.BorderedDiv}>\r\n                <BasicPage\r\n                    classTitle={`${webpage.sections[2]}: Updated 2020`}\r\n                    img={Resume /* TODO type out instead of screenshot */}\r\n                >\r\n                    <LinkButton name='JoshBaroniResume2020.PDF' href='https://docs.google.com/document/d/1XPGBCnOPeDbmYbU79OaEwSEDOC9kUKM1WLgZkvsJT4g/edit?usp=sharing'/>\r\n                </BasicPage>\r\n            </div>)\r\n        },\r\n        () => {\r\n            return (\r\n                <div key={3} id={webpage.sections[3]} className={classes.BorderedDiv}>\r\n                    <h2>{webpage.sections[3]}</h2>\r\n                    <ProjectsPage />\r\n                </div>\r\n            )\r\n        },\r\n        () => {\r\n            return (\r\n            <div key={3} id={webpage.sections[4]} className={classes.BorderedDiv}>\r\n                <BasicPage\r\n                    className={classes.Bottom}\r\n                    classTitle={`${webpage.sections[4]}`}\r\n                    body=\"Email: joshua.baroni.16@cnu.edu\r\n                    Cell: (571)-389-2922 (Text me unless it's urgent!)\r\n                    Discord: HesAMusicMan#2934\r\n                    Contact Hours: 9a-5p EST Mon-Sat\"\r\n                />\r\n            </div>\r\n            )\r\n        }\r\n    ]\r\n}\r\n\r\nconst LinkButton = (props) => {\r\n    console.log(props.href)\r\n    return (\r\n    <Router>\r\n      <a href={props.href}>\r\n        <button className={classes.LinkButton}>\r\n            <strong>{props.name}</strong>\r\n        </button>\r\n      </a>\r\n    </Router>\r\n    )\r\n}\r\n\r\n(() => console.log(Resume))();\r\n\r\nclass EntryPoint extends Component {\r\n\r\n    render() {\r\n        return (\r\n        <div key={0} id={webpage.sections[0]} className={classes.Home}>\r\n            <Menu sections={webpage.sections}/>\r\n            <h1>{webpage.name}: {webpage.title}</h1>\r\n            <LinkButton name={\"Github\"} href=\"https://github.com/joshuabaroni\" />\r\n            <LinkButton name={\"LinkedIn\"} href=\"https://www.linkedin.com/in/joshua-baroni-b50580177/\" />\r\n            <LinkButton name={\"Facebook\"} href=\"https://www.facebook.com/profile.php?id=100020207475034\" />\r\n            <div style={{ 'height':'20px' }} />\r\n            {webpage.subpages.map(page => {\r\n                return page();\r\n            })}\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EntryPoint;","import React from 'react';\r\nimport './App.css';\r\nimport EntryPoint from './entry_point/EntryPoint.js'\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <EntryPoint />      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}