{"version":3,"sources":["menu/Menu.module.css","img/JoshBaroniResume2020-1.jpg","img/ProfilePicBaroni2016.jpg","entry_point/EntryPoint.module.css","menu/Menu.js","pages/BasicPage.js","pages/NaiveBayesInterface.js","pages/ProjectsPage.js","entry_point/EntryPoint.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","RenderNavs","props","navLinkComponents","sections","map","section","index","push","Nav","Link","key","className","classes","NavLink","href","Menu","Navbar","navbar","bg","expand","Brand","BasicPage","classTitle","src","img","style","width","console","log","body","children","prodURL","XMLHttpRequest","ApiURL","list_files","get_model","get_model_accuracy","set_file","fileKey","getCall","url","a","options","method","headers","accept","fetch","response","text","data","status","JSON","stringify","parse","requestOptionsPOST","then","NaiveBayesInterface","handleChange","event","setState","input","target","value","callSetData","sendRequestHandler","state","callListOfFiles","output","callGetModel","callGetModelAccuracy","onClick","this","type","onChange","Object","keys","Component","ProjectsPage","renderProjects","projects","show","showNaiveBayes","ref","drawChart","drawn","i","Math","random","accessToRef","d3","current","append","attr","selectAll","enter","d","React","createRef","page","webpage","name","title","subpages","id","BorderedDiv","ignore","Ignore","sixtyPercent","Headshot","Resume","Bottom","LinkButton","EntryPoint","Home","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.0bbc220f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavLink\":\"Menu_NavLink__9JLxN\",\"navbar\":\"Menu_navbar__2k2K1\",\"navbar-brand\":\"Menu_navbar-brand__3SODX\",\"navbar-toggle\":\"Menu_navbar-toggle__1v0eG\"};","module.exports = __webpack_public_path__ + \"static/media/JoshBaroniResume2020-1.ff228373.jpg\";","module.exports = __webpack_public_path__ + \"static/media/ProfilePicBaroni2016.5bae192a.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Home\":\"EntryPoint_Home__2XQwI\",\"AboutMe\":\"EntryPoint_AboutMe__3dg8Q\",\"BorderedDiv\":\"EntryPoint_BorderedDiv__2hydP\",\"Bottom\":\"EntryPoint_Bottom__2Dcu2\",\"LinkButton\":\"EntryPoint_LinkButton__3ufBN\",\"Project\":\"EntryPoint_Project__2_-gZ\",\"sixtyPercent\":\"EntryPoint_sixtyPercent__WKGmz\"};","import React from 'react'\r\nimport { Navbar, Nav } from 'react-bootstrap'\r\nimport classes from './Menu.module.css'\r\n\r\nconst RenderNavs = (props) => {\r\n    let navLinkComponents = [];\r\n    props.sections.map((section, index) => {\r\n        return navLinkComponents.push(\r\n            <Nav.Link key={index} className={classes.NavLink} href={`#${section}`}>{section}</Nav.Link>\r\n        )\r\n    })\r\n    return (\r\n        <Nav className=\"Menu\">\r\n            {navLinkComponents}\r\n        </Nav>\r\n    )\r\n}\r\n\r\nconst Menu = (props) => {\r\n    return (\r\n        <div>\r\n            <Navbar className={classes.navbar} bg=\"light\" expand=\"lg\">\r\n                <Navbar.Brand href=\"#root\">{/*TODO logo img here*/}</Navbar.Brand>\r\n                <RenderNavs sections={props.sections}/>\r\n            </Navbar>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Menu;","import React from 'react'\r\n\r\n/**\r\n * Template for pages containing only text, auch as about me\r\n * @param {*contains pagename} props \r\n */\r\nconst BasicPage = ( props ) => {\r\n    return (\r\n        <div className={props.className}>\r\n            <h2>\r\n                {props.classTitle}\r\n            </h2>\r\n            <img src={props.img} style={{width: \"60%\"}}/>\r\n            <p>\r\n                {console.log(props.body)}\r\n                {props.body}\r\n            </p>\r\n            {props.children}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default BasicPage;","import React, { Component } from 'react'\r\nconst Http = new XMLHttpRequest();\r\nconst prodURL = \"https://naivebayesjava.herokuapp.com\";\r\nconst devURL = \"http://localhost:8080\";\r\n\r\n// change devURL to prodURL before pushing to github\r\n// change HttpRequest to HttpsRequest\r\nconst ApiURL = {\r\n    // GET calls\r\n    list_files: prodURL + \"/list_available_files\",\r\n    get_model: prodURL + \"/get_model\",\r\n    get_model_accuracy: prodURL + \"/get_model_accuracy\",\r\n    // POST calls\r\n    set_file: (fileKey) => {\r\n        return prodURL + `/set_file?fileKey=${fileKey}`\r\n    }\r\n}\r\n\r\n// GET Template\r\n// Simple GET request using fetch\r\nasync function getCall(url) {\r\n    let options = {\r\n        method: 'GET',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        accept: { 'Accept': 'application/json' }\r\n    };\r\n    let response = await fetch(url, options);\r\n    let data = await response.text();\r\n    console.log(`Response received from ${ApiURL.get_model_accuracy} with code ${response.status}`)\r\n    data = JSON.stringify(data);\r\n    data = JSON.parse(data);\r\n    return data;\r\n}\r\n\r\n// POST Template\r\n// Simple POST request with a JSON body using fetch\r\nasync function sendRequestHandler(fileKey) {\r\n    const requestOptionsPOST = {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' }\r\n        // body: JSON.stringify({ title: 'React POST Request Example' })\r\n    };\r\n    fetch(ApiURL.set_file(fileKey), requestOptionsPOST)\r\n        .then(response => {\r\n                console.log(`POST request sent to ${ApiURL.set_file(fileKey)} with code ${response.status}`)\r\n            } )\r\n}\r\n\r\nclass NaiveBayesInterface extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            input: \"\",\r\n            output: []\r\n        }\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({input: event.target.value});\r\n    }\r\n\r\n    callSetData = () => {\r\n        sendRequestHandler(this.state.input)\r\n    }\r\n\r\n    callListOfFiles = () => {\r\n        getCall(ApiURL.list_files).then(data => {\r\n            this.setState({ output: data })\r\n        });\r\n    }\r\n\r\n    // callCurrentModel = () => {\r\n        \r\n    // }\r\n\r\n    callGetModel = () => {\r\n        getCall(ApiURL.get_model).then(data => {\r\n            this.setState({ output: data })\r\n        })\r\n    }\r\n\r\n    callGetModelAccuracy = () => {\r\n        getCall(ApiURL.get_model_accuracy).then(data => {\r\n            this.setState({ output: data });\r\n        });\r\n    }\r\n\r\n    // callGetTrainingData = () => {\r\n\r\n    // }\r\n\r\n    render() {\r\n        return <div>\r\n            <h3>Welcome to Naive Bayes Java!</h3>\r\n            <p>The REST API for this project is hosted at</p>\r\n            <a style={{'display':'block', 'paddingBottom':'1.5em', 'color':'rgb(0, 150, 196)'}} href=\"https://naivebayesjava.herokuapp.com/swagger-ui.html#/\">https://naivebayesjava.herokuapp.com/</a>\r\n            <button style={{'display':'inline', 'background':'rgb(32, 32, 32)', 'color':'rgb(190, 190, 190)'}} onClick={this.callListOfFiles}>\r\n                Get List of Valid Files\r\n            </button>\r\n            <button style={{'background':'rgb(32, 32, 32)', 'color':'rgb(190, 190, 190)'}} onClick={this.callGetModel}>\r\n                Get Model\r\n            </button>\r\n            <button style={{'background':'rgb(32, 32, 32)', 'color':'rgb(190, 190, 190)'}} onClick={this.callGetModelAccuracy}>\r\n                Get Model Accuracy\r\n            </button>\r\n            <div style={{'margin':'auto', 'display':'block'}}>\r\n                <input style={{'background':'rgb(32, 32, 32)', 'color':'rgb(190, 190, 190)'}} type='text' value={this.state.input} onChange={this.handleChange}/>\r\n                <button style={{'background':'rgb(32, 32, 32)', 'color':'rgb(190, 190, 190)'}} onClick={this.callSetData}>\r\n                    Set Training Data File\r\n                </button>\r\n            </div>\r\n            {/* <button onClick={this.callGetTrainingData}>\r\n                Get Training Data Arff Files\r\n            </button> */}\r\n            <output type='textBox' style={{ 'padding':'1.25em', 'display':'block', 'Height': '30px', 'Width': '300px' }}>\r\n            { Object.keys(this.state.output).map(key => {\r\n                return (\r\n                    this.state.output[key]\r\n                )\r\n            }) }\r\n            </output>\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default NaiveBayesInterface;","import React, {Component} from 'react'\r\nimport * as d3 from 'd3'\r\nimport NaiveBayesInterface from \"../pages/NaiveBayesInterface\"\r\n\r\nclass ProjectsPage extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        this.ref = React.createRef();\r\n        this.state = {\r\n            drawn: false,\r\n            show: false\r\n        }\r\n    }\r\n\r\n    renderProjects = {\r\n        projects: [\r\n            () => {\r\n                return (\r\n                    <div>\r\n                        Project 1: Naive Bayes ML Algorithm in Java\r\n                        {(this.state.show) ? (\r\n                            <div style={{'padding-top':'0.5em'}}>\r\n                                <button\r\n                                    style={{ 'margin':'auto', 'display': 'block', 'background':'rgb(32, 32, 32)', 'color':'rgb(190, 190, 190)' }}\r\n                                    onClick={this.showNaiveBayes}>\r\n                                        Hide Naive Bayes Project Interface\r\n                                </button>\r\n                                <NaiveBayesInterface />\r\n                            </div>\r\n                            )\r\n                            :(\r\n                            <div style={{'padding-top':'0.5em'}}>\r\n                                <button\r\n                                    style={{ 'margin':'auto', 'display': 'block', 'background':'rgb(32, 32, 32)', 'color':'rgb(190, 190, 190)' }}\r\n                                    onClick={this.showNaiveBayes}>\r\n                                        Show Naive Bayes Project Interface\r\n                                </button>\r\n                            </div>\r\n                            )\r\n                        }\r\n                </div>\r\n                )\r\n            },\r\n            () => {\r\n                return (\r\n                    <div style={{'padding':'1em'}}>\r\n                        Project 2: D3 Data Visualization (Under Construction)\r\n                        <div style={{'padding-top':'0.5em'}} ref={this.ref}>\r\n                            <button\r\n                                style={{'margin':'auto', 'display':'block', 'background-color':'rgb(32, 32, 32)', 'color':'rgb(190, 190, 190)'}}\r\n                                onClick={this.drawChart}>\r\n                                    Draw a Chart with Randomized Dummy Data\r\n                                </button>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n        ]\r\n    }\r\n\r\n    drawChart = () => {\r\n        if (!this.state.drawn) { // todo plug in real data here\r\n            this.setState({drawn: true});\r\n            const data = [];\r\n\r\n            for (let i = 0; i < 7; i++) {\r\n                data.push(Math.random() * 40)\r\n            }\r\n\r\n            const w = 500;\r\n            const h = 400;\r\n\r\n            var accessToRef = d3.select(this.ref.current)\r\n                .append(\"svg\")\r\n                .attr(\"width\", w)\r\n                .attr(\"height\", h)\r\n                .style(\"background-color\", \"rgb(54, 54, 54)\")\r\n                .style(\"padding\", 10)\r\n                .style(\"margin\", \"auto\")\r\n\r\n            console.log('accessToRef', accessToRef)\r\n\r\n            accessToRef = accessToRef.selectAll(\"rect\")\r\n                .data(data)\r\n                .enter()\r\n            \r\n            console.log('accessToRef', accessToRef)\r\n\r\n            accessToRef.append(\"rect\")\r\n                .attr(\"x\", (d, i) => i * 70)\r\n                .attr(\"y\", (d, i) => h - 10 * d)\r\n                .attr(\"width\", 65)\r\n                .attr(\"height\", (d, i) => d * 10)\r\n                .attr(\"fill\", \"#61DBFB\");\r\n        } else {\r\n            console.log(\"already drawn\")\r\n        }\r\n    }\r\n\r\n    showNaiveBayes = () => {\r\n        this.setState({show: !this.state.show})\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.renderProjects.projects.map(page => {\r\n                    return page();\r\n                })}\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nexport default ProjectsPage;","import React, {Component} from 'react';\r\nimport classes from './EntryPoint.module.css';\r\nimport {BrowserRouter as Router} from 'react-router-dom';\r\nimport Menu from '../menu/Menu.js'\r\nimport BasicPage from '../pages/BasicPage.js'\r\nimport Headshot from '../img/ProfilePicBaroni2016.jpg'\r\nimport Resume from \"../img/JoshBaroniResume2020-1.jpg\"\r\nimport ProjectsPage from '../pages/ProjectsPage'\r\nconst webpage = {\r\n    name: \"Joshua Baroni\",\r\n    title: \"FullStack Developer\",\r\n    sections: [\r\n        \"Home\",\r\n        \"About Me\",\r\n        \"My Resume\",\r\n        \"Projects\",\r\n        \"Contact Me\"\r\n    ],\r\n    subpages: [\r\n        () => {\r\n            return (\r\n                <div key={1} id={webpage.sections[1]} className={classes.BorderedDiv}>\r\n                <BasicPage ignore={classes.Ignore/* todo needs formatting */}\r\n                    className={classes.sixtyPercent}\r\n                    classTitle={webpage.sections[1]}\r\n                    img={Headshot}\r\n                    body={`Hi, my name is Josh Baroni and welcome to my website!\r\n                    Graduating from CNU's Class of 2020 with a B.S. in Computer Science,\r\n                    I am currently new to the industry and am finding what specific type\r\n                    of data architecture and design I am most interested in pursuing. In the\r\n                    meantime, feel free to check out some of the projects I've worked on over\r\n                    the years.`}\r\n                />\r\n            </div>)\r\n        },\r\n        () => {\r\n            return (<div key={2} id={webpage.sections[2]} className={classes.BorderedDiv}>\r\n                <BasicPage\r\n                    classTitle={`${webpage.sections[2]}: Updated 2020`}\r\n                    img={Resume /* TODO type out instead of screenshot */}\r\n                >\r\n                    <LinkButton name='JoshBaroniResume2020.PDF' href='https://docs.google.com/document/d/1XPGBCnOPeDbmYbU79OaEwSEDOC9kUKM1WLgZkvsJT4g/edit?usp=sharing'/>\r\n                </BasicPage>\r\n            </div>)\r\n        },\r\n        () => {\r\n            return (\r\n                <div key={3} id={webpage.sections[3]} className={classes.BorderedDiv}>\r\n                    <h2>{webpage.sections[3]}</h2>\r\n                    <ProjectsPage />\r\n                </div>\r\n            )\r\n        },\r\n        () => {\r\n            return (\r\n            <div key={3} id={webpage.sections[4]} className={classes.BorderedDiv}>\r\n                <BasicPage\r\n                    className={classes.Bottom}\r\n                    classTitle={`${webpage.sections[4]}`}\r\n                    body=\"Email: joshua.baroni.16@cnu.edu\r\n                    Cell: (571)-389-2922 (Text me unless it's urgent!)\r\n                    Discord: HesAMusicMan#2934\r\n                    Contact Hours: 9a-5p EST Mon-Sat\"\r\n                />\r\n            </div>\r\n            )\r\n        }\r\n    ]\r\n}\r\n\r\nconst LinkButton = (props) => {\r\n    console.log(props.href)\r\n    return (\r\n    <Router>\r\n      <a href={props.href}>\r\n        <button className={classes.LinkButton}>\r\n            <strong>{props.name}</strong>\r\n        </button>\r\n      </a>\r\n    </Router>\r\n    )\r\n}\r\n\r\n(() => console.log(Resume))();\r\n\r\nclass EntryPoint extends Component {\r\n\r\n    render() {\r\n        return (\r\n        <div key={0} id={webpage.sections[0]} className={classes.Home}>\r\n            <Menu sections={webpage.sections}/>\r\n            <h1>{webpage.name}: {webpage.title}</h1>\r\n            <LinkButton name={\"Github\"} href=\"https://github.com/joshuabaroni\" />\r\n            <LinkButton name={\"LinkedIn\"} href=\"https://www.linkedin.com/in/joshua-baroni-b50580177/\" />\r\n            <LinkButton name={\"Facebook\"} href=\"https://www.facebook.com/profile.php?id=100020207475034\" />\r\n            <div style={{ 'height':'20px' }} />\r\n            {webpage.subpages.map(page => {\r\n                return page();\r\n            })}\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EntryPoint;","import React from 'react';\r\nimport './App.css';\r\nimport EntryPoint from './entry_point/EntryPoint.js'\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <EntryPoint />      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}